/*
 * Copyright 2018, Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/ {
	aliases {
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		i2c3 = &i2c3;
	};

	caam_keyblob: caam-keyblob {
		compatible = "fsl,sec-v4.0-keyblob";
	};

	reserved-memory {
		linux,cma {
			digi,size-table = <
				/* RAM         CMA*/
				0 0x20000000 0 0x6000000	/* 512 MB variants -> 96 MB of CMA */
				0 0x40000000 0 0x14000000	/* 1 GB variants   -> 320 MB of CMA */
				0 0x80000000 0 0x28000000	/* 2 GB variants   -> 640 MB of CMA */
			>;
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_3v3: regulator-som@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};

		reg_1v8_adc_vref: regulator-som@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "1v8_adc_vref";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

		reg_1v8: regulator-som@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};
	};
};

&adc0 {
	vref-supply = <&reg_1v8_adc_vref>;
	digi,max-channel = <5>;
};

/* I2C0 connected to MCA and crypto chip */
&i2c0 {
	#address-cells = <1>;
	#size-cells = <0>;
	clocks = <&clk IMX8QXP_I2C0_CLK>,
		 <&clk IMX8QXP_I2C0_IPG_CLK>;
	clock-names = "per", "ipg";
	assigned-clock-rates = <48000000>;
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	digi,hold-time-ns = <8000>;
	digi,buffer-time-us = <35>;
	pinctrl-0 = <&pinctrl_lpi2c0>;
	pinctrl-1 = <&pinctrl_lpi2c0_gpio>;
	scl-gpios = <&gpio3 8 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio3 7 GPIO_ACTIVE_HIGH>;
	status = "okay";

	mca_cc8x: mca@63 {
		compatible = "digi,mca-cc8x";
		reg = <0x63>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 177 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-controller;
		#interrupt-cells = <2>;
		fw-update-gpio = <&gpio3 9 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mca_cc8x>;

		mca_adc: adc {
			compatible = "digi,mca-cc8x-adc";
			digi,adc-vref = <3000000>;
		};

		mca_gpio: gpio {
			compatible = "digi,mca-cc8x-gpio";
			gpio-controller;
			#gpio-cells = <2>;

			interrupt-parent = <&mca_cc8x>;
			interrupt-controller;
			#interrupt-cells = <2>;

			/* Disable all mca GPIOs as power off wake up sources */
			pwroff-wakeup-capable-ios = <>;
		};

		pwrkey {
			compatible = "digi,mca-cc8x-pwrkey";
			digi,key-power;
			digi,key-power-up;
			digi,key-sleep;
			digi,debounce-ms = <100>;
			digi,pwroff-delay-sec = <6>;
			digi,pwroff-guard-sec = <30>;
		};

		rtc {
			compatible = "digi,mca-cc8x-rtc";
		};

		wdt {
			compatible = "digi,mca-cc8x-wdt";
			digi,full-reset;
		};

		pwms {
			compatible = "digi,mca-pwm";
			#address-cells = <1>;
			#size-cells = <0>;

			mca_pwm0: pwm@0 {
				reg = <0>;
				pwm-channels = <6>;
				#pwm-cells = <3>;
			};

			mca_pwm1: pwm@1 {
				reg = <1>;
				pwm-channels = <2>;
				#pwm-cells = <3>;
			};

			mca_pwm2: pwm@2 {
				reg = <2>;
				pwm-channels = <2>;
				#pwm-cells = <3>;
			};
		};

		mca_tamper: tamper {
			compatible = "digi,mca-cc8x-tamper";
		};

		mca_uart: uart {
			compatible = "digi,mca-cc8x-uart";
			#address-cells = <1>;
			#size-cells = <0>;

			mca_uart0: serial@0x900 {
				reg = <0x900>;
				index = <0>;
			};

			mca_uart1: serial@0x920 {
				reg = <0x920>;
				index = <1>;
			};

			mca_uart2: serial@0x940 {
				reg = <0x940>;
				index = <2>;
			};
		};
	};
};

/* Disable CPU RTC */
&rtc {
	status = "disabled";
};

/* Disable CPU watchdog */
&wdog {
	status = "disabled";
};

&imx8_gpu_ss {
	/*
	 * Use a table to set a fixed amount of contiguous memory used by the GPU
	 * per memory configuration. This way we leave plenty of room for the
	 * other system features when the memory is limited. The table's rows must
	 * be in increasing RAM order. The GPU CMA should always be smaller than the
	 * total CMA (see the table in the "reserved-memory" node to see the total CMA
	 * values per memory configuration).
	 */
	digi,contiguous-size-table = <
		/* RAM     CMA*/
		0x20000000 0x2000000	/* 512 MB variants -> 32 MB of GPU CMA */
		0x40000000 0x8000000	/* 1 GB variants   -> 128 MB of GPU CMA */
		0x80000000 0x10000000	/* 2 GB variants   -> 256 MB of GPU CMA */
	>;
};

&mu {
	/*
	 * Skip the registration of the SC interrupt handler on the MU ipc code.
	 * The MCA will register its own interrupt handler and will call the
	 * MU isr acordingly.
	 */
	digi,skip-irq-req;
};

&rpmsg{
	/*
	 * 64K for one rpmsg instance:
	 */
	vdev-nums = <2>;
	reg = <0x0 0x90000000 0x0 0x20000>;
	status = "okay";
};

&tsens {
	tsens-num = <3>;
};

&thermal_zones {
	pmic-thermal0 {
		polling-delay-passive = <250>;
		polling-delay = <2000>;
		thermal-sensors = <&tsens 2>;
		trips {
			pmic_alert0: trip0 {
				temperature = <85000>;
				hysteresis = <2000>;
				type = "passive";
			};
			pmic_crit0: trip1 {
				temperature = <105000>;
				hysteresis = <2000>;
				type = "critical";
			};
		};
		cooling-maps {
			map0 {
				trip = <&pmic_alert0>;
				cooling-device = <&A35_0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
			};
		};
	};
};

/* eMMC */
&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	/*
	 * This property should be removed once the eMMC voltage is configured
	 * to 1.8V.
	 */
	no-1-8-v;
	status = "okay";
};

&vpu {
	status = "disabled";
};

&vpu_decoder {
	core_type = <1>;
	status = "disabled";
};

&vpu_encoder {
	status = "disabled";
};

/* IOMUX */
&iomuxc {
	/* Internal I2C (MCA, Crypto chip) */
	pinctrl_lpi2c0: lpi2c0grp {
		fsl,pins = <
			SC_P_MIPI_CSI0_GPIO0_00_ADMA_I2C0_SCL	0xc6000066
			SC_P_MIPI_CSI0_GPIO0_01_ADMA_I2C0_SDA	0xc6000066
		>;
	};

	pinctrl_lpi2c0_gpio: lpi2c0gpiogrp {
		fsl,pins = <
			SC_P_MIPI_CSI0_GPIO0_00_LSIO_GPIO3_IO08	0xc6000066
			SC_P_MIPI_CSI0_GPIO0_01_LSIO_GPIO3_IO07	0xc6000066
		>;
	};

	pinctrl_mca_cc8x: mcagrp {
		fsl,pins = <
			/*
			 * MCA_nINT
			 *
			 * Currently, the MCA interrupt request line is
			 * configured by the SCU
			 *
			 * SC_P_PMIC_INT_B_SCU_DSC_PMIC_INT_B	0xb0b1
			 */

			/* MCA_FW_UPDATE */
			SC_P_QSPI0A_DATA0_LSIO_GPIO3_IO09	0x06000021
		>;
	};

	/* eMMC */
	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			SC_P_EMMC0_CLK_CONN_EMMC0_CLK		0x06000041
			SC_P_EMMC0_CMD_CONN_EMMC0_CMD		0x00000021
			SC_P_EMMC0_DATA0_CONN_EMMC0_DATA0	0x00000021
			SC_P_EMMC0_DATA1_CONN_EMMC0_DATA1	0x00000021
			SC_P_EMMC0_DATA2_CONN_EMMC0_DATA2	0x00000021
			SC_P_EMMC0_DATA3_CONN_EMMC0_DATA3	0x00000021
			SC_P_EMMC0_DATA4_CONN_EMMC0_DATA4	0x00000021
			SC_P_EMMC0_DATA5_CONN_EMMC0_DATA5	0x00000021
			SC_P_EMMC0_DATA6_CONN_EMMC0_DATA6	0x00000021
			SC_P_EMMC0_DATA7_CONN_EMMC0_DATA7	0x00000021
			SC_P_EMMC0_STROBE_CONN_EMMC0_STROBE	0x00000041
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
		fsl,pins = <
			SC_P_EMMC0_CLK_CONN_EMMC0_CLK		0x06000041
			SC_P_EMMC0_CMD_CONN_EMMC0_CMD		0x00000021
			SC_P_EMMC0_DATA0_CONN_EMMC0_DATA0	0x00000021
			SC_P_EMMC0_DATA1_CONN_EMMC0_DATA1	0x00000021
			SC_P_EMMC0_DATA2_CONN_EMMC0_DATA2	0x00000021
			SC_P_EMMC0_DATA3_CONN_EMMC0_DATA3	0x00000021
			SC_P_EMMC0_DATA4_CONN_EMMC0_DATA4	0x00000021
			SC_P_EMMC0_DATA5_CONN_EMMC0_DATA5	0x00000021
			SC_P_EMMC0_DATA6_CONN_EMMC0_DATA6	0x00000021
			SC_P_EMMC0_DATA7_CONN_EMMC0_DATA7	0x00000021
			SC_P_EMMC0_STROBE_CONN_EMMC0_STROBE	0x00000041
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
		fsl,pins = <
			SC_P_EMMC0_CLK_CONN_EMMC0_CLK		0x06000041
			SC_P_EMMC0_CMD_CONN_EMMC0_CMD		0x00000021
			SC_P_EMMC0_DATA0_CONN_EMMC0_DATA0	0x00000021
			SC_P_EMMC0_DATA1_CONN_EMMC0_DATA1	0x00000021
			SC_P_EMMC0_DATA2_CONN_EMMC0_DATA2	0x00000021
			SC_P_EMMC0_DATA3_CONN_EMMC0_DATA3	0x00000021
			SC_P_EMMC0_DATA4_CONN_EMMC0_DATA4	0x00000021
			SC_P_EMMC0_DATA5_CONN_EMMC0_DATA5	0x00000021
			SC_P_EMMC0_DATA6_CONN_EMMC0_DATA6	0x00000021
			SC_P_EMMC0_DATA7_CONN_EMMC0_DATA7	0x00000021
			SC_P_EMMC0_STROBE_CONN_EMMC0_STROBE	0x00000041
		>;
	};
};
